<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>R on Guanhua Li</title>
    <link>https://lihtium.github.io/website/tags/r/index.xml</link>
    <description>Recent content in R on Guanhua Li</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="https://lihtium.github.io/website/tags/r/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>The curious incident of cbind() and c()</title>
      <link>https://lihtium.github.io/website/post/2017-02-01-first-post/</link>
      <pubDate>Wed, 01 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>https://lihtium.github.io/website/post/2017-02-01-first-post/</guid>
      <description>&lt;!-- BLOGDOWN-BODY-BEFORE

/BLOGDOWN-BODY-BEFORE --&gt;

&lt;div id=&#34;r-markdown&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;R Markdown&lt;/h1&gt;
&lt;p&gt;For this first blog post, I wanted to render some R Markdown code, see how this works and catch up with all the things I always wanted to do. But curiously, by doing so I bumped into some weird stuff about cbind() and c().&lt;/p&gt;
&lt;p&gt;So let’s start this journey with something easy, like plotting the distribution of a normal distribution.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;normal.sample&amp;lt;-rnorm(100,0,1)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now that we have the sample, we can plot the histogram of the sample :&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;hist(normal.sample,
     xlim=c(-3,3),
     breaks=100,
     probability = T)

points(seq(-3,3,by=(3-(-3))/100),
       dnorm(seq(-3,3,by=(3-(-3))/100),0,1))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://lihtium.github.io/website/post/2017-02-01-first-post/figures/hist-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;qqnorm(normal.sample)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://lihtium.github.io/website/post/2017-02-01-first-post/figures/hist-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;shapiro.test(normal.sample)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
##  Shapiro-Wilk normality test
## 
## data:  normal.sample
## W = 0.99482, p-value = 0.9701&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;var(normal.sample)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 1.060658&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;mean(normal.sample)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 0.06686328&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It seems like 100 simulations are not enough, so why don’t we try with 10000 :&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;normal.sample&amp;lt;-rnorm(10000,0,1)

hist(normal.sample,
     xlim=c(-3,3),
     breaks=100,
     probability = T)

points(seq(-3,3,by=(3-(-3))/100),
       dnorm(seq(-3,3,by=(3-(-3))/100),0,1))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://lihtium.github.io/website/post/2017-02-01-first-post/figures/rnorm%2010000-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;v&amp;lt;-var(normal.sample)
v&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 1.008404&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;m&amp;lt;-mean(normal.sample)
m&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 0.0008420575&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We see that the variance differs around 0.84%. As for the mean, we can see that it is 0.001.&lt;/p&gt;
&lt;p&gt;Now, here’s a trick : the standard normal distribution is a symetric distribution with mean=0, so if we take n simulations and extend them with the same n simulations but by multiplying them by -1, we should see better results for the first two moments.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;normal.sample&amp;lt;-rnorm(2500,0,1)

hist(normal.sample,
     xlim=c(-3,3),
     breaks=100,
     probability = T)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://lihtium.github.io/website/post/2017-02-01-first-post/figures/symetric-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;var(normal.sample)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 0.9764315&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;normal.sample&amp;lt;-c(normal.sample,-normal.sample)

hist(normal.sample,
     xlim=c(-3,3),
     breaks=100,
     probability = T)

points(seq(-3,3,by=(3-(-3))/100),
       dnorm(seq(-3,3,by=(3-(-3))/100),0,1))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://lihtium.github.io/website/post/2017-02-01-first-post/figures/symetric-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;v&amp;lt;-var(normal.sample)
v&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 0.9762426&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;mean(normal.sample)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] -3.469447e-22&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Well, normally the mean should be equal to 0. Let’s recall how the mean is computed :&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(\bar{X} = \frac{1}{N} \sum_{i=1}^N X_i\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;As we took normal.sample and it’s negative version (*-1), the sum shoud be 0 because &lt;span class=&#34;math inline&#34;&gt;\(X_i=-X_{2500+i}\)&lt;/span&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;normal.sample&amp;lt;-round(normal.sample,digits=2)

mean(normal.sample)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 0&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;var(normal.sample)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 0.9763253&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Ok, still doesn’t work :p the mean is not equal to 0, but very close!&lt;/p&gt;
&lt;p&gt;Let’s now try this&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;x&amp;lt;-rnorm(2500,0,1)
y&amp;lt;- -x
sum(x+y)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 0&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;sum(c(x,y))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 8.673617e-18&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Seems like the c function is making the weird things. Now what about cbind or rbind?&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;sum(cbind(x,y))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 8.673617e-18&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;sum(rbind(x,y))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 0&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Seems like rbind saves us from this little tiny error :).&lt;/p&gt;
&lt;p&gt;Guanhua&lt;/p&gt;
&lt;/div&gt;


&lt;!-- BLOGDOWN-HEAD




/BLOGDOWN-HEAD --&gt;
</description>
    </item>
    
  </channel>
</rss>
